version: 2.1

parameters:
  fingerprint:
    type: string
    default: SHA256:OkxsH8Z6Iim6WDJBaII9eTT9aaO1f3eDc6IpsgYYPVg
  min-rust-version:
    type: string
    default: "1.87"
  release-flag:
    type: boolean
    default: false
    description: "If true, the release workflow will be executed."
  success-flag:
    type: boolean
    default: false
    description: "If true, the success pipeline will be executed."
  validation-flag:
    type: boolean
    default: false
    description: "If true, the validation pipeline will be executed."

orbs:
  toolkit: jerus-org/circleci-toolkit@2.12.1

executors:
  rust-env:
    docker:
      - image: jerusdp/ci-rust:<<pipeline.parameters.min-rust-version>>

commands:
  make_cargo_release_update_changelog:
    description: |
      This makes a release using cargo release
    parameters:
      echo:
        default: false
        description: If true, the bash environment will be set to echo the commands
        type: boolean
      first_release:
        default: false
        description: |
          Request that a first release (v0.1.0) be created
        type: boolean
      initial_bump:
        default: none
        description: |
          "If set the initial bump value to use. If not set the bump
          will be calculated by examining the commits made since the
          last version was generated."
        type: enum
        enum:
          - none
          - patch
          - minor
          - major
      no_push:
        default: false
        description: Whether or not cargo release should push the changes
        type: boolean
      package:
        default: ""
        description: Package to release and/or publish
        type: string
      publish:
        default: true
        description: If true, the release will be published.
        type: boolean
      specific_version:
        default: false
        description: >
          Make a specific release, if true version must be set to the specific
          version number
        type: boolean
      verbosity:
        default: "-vv"
        description: Verbosity for cargo release
        type: string
      version:
        default: ""
        description: |
          Specific version number to release
        type: string
    steps:
      - run:
          name: Set the bump level for the changes
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            case << parameters.initial_bump >> in 
              none)
                bump=$(nextsv -q require -f CHANGELOG.md feature)
                ;;
              minor)
                bump="minor"
                ;;
              major)
                bump="major"
                ;;
              *)
                bump="patch"
                ;;
            esac

            echo "Bump set to ${bump}"

            echo "export BUMP=${bump}" >> "$BASH_ENV"
      - run:
          name: Bump create version to the next version number
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release version \
                --execute
      - run:
          name: Perform pre-release replacements
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release replace \
                --execute

      - run:
          name: Run pre-release hooks
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release hook \
                --execute
      - run:
          name: Commit the specified packages
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release commit \
                --execute

      - run:
          name: Publish the specified packages
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi


            cargo release publish \
                --execute

      - run:
          name: Tag the released commits
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release tag \
                --execute
      - run:
          name: Remake the change log
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            gen-changelog

      - run:
          name: Commit the specified packages
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release commit \
                --execute

      - run:
          name: Push tags/commits to remote
          command: |
            if [ << parameters.echo >> == true ] ; then
              set -exo pipefail
            else
              set -eo pipefail
            fi

            cargo release push \
                --execute

jobs:
  make_release_and_update_changelog:
    description: |
      Assess the level using nextsv and make a release using cargo release
      Update the change log using gen-changelog and push changes including 
      updated changelog before publishing the release.
    executor:
      name: rust-env
    parameters:
      blog_directory:
        default: content/blog
        description: The directory to use for the blog
        type: string
      bluesky_command:
        default: draft
        description: The command to run for bluesky
        enum:
          - draft
          - post
        type: enum
      echo:
        default: false
        description: If true, the bash environment will be set to echo the commands
        type: boolean
      min_rust_version:
        type: string
      package:
        default: ""
        description: The package to publish
        type: string
      pcu_no_push:
        default: false
        description: Whether or not prevent final push of commit
        type: boolean
      pcu_semver:
        default: false
        description: Whether or not set the semver version flag
        type: boolean
      pcu_verbosity:
        default: "-vv"
        description: The verbosity of the pcu command
        type: string
      publish:
        default: true
        description: |
          Publish the release
        type: boolean
      remove_ssh_key:
        default: true
        description: Remove the original SSH key from the agent
        type: boolean
      specific_version:
        default: false
        description: >
          Make a specific release, if true version must be set to the specific
          version number
        type: boolean
      ssh_fingerprint:
        type: string
      verbosity:
        default: "-vv"
        description: Verbosity for cargo release
        type: string
      version:
        default: ""
        description: |
          Specific version number to release
        type: string
      when_bluesky:
        default: false
        description: Whether or not to run the bluesky command
        type: boolean
      when_pcu_push:
        default: false
        description: To use the pcu push command
        type: boolean
      when_update_pcu:
        default: false
        description: |
          Update pcu to the latest version based on the main branch on Github
        type: boolean
      when_use_workspace:
        default: false
        description: Get version from the workspace
        type: boolean
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - << parameters.ssh_fingerprint >>
      - when:
          condition: << parameters.remove_ssh_key >>
          steps:
            - run:
                command: |
                  ssh-add -l
                  ssh-add -d ~/.ssh/id_rsa.pub
                  ssh-add -l
                name: Remove original SSH key from agent
      - toolkit/gpg_key
      - toolkit/git_config
      - when:
          condition: << parameters.when_update_pcu >>
          steps:
            - toolkit/install_latest_pcu
      - when:
          condition:
            and:
              - not: << parameters.when_pcu_push >>
          steps:
            - make_cargo_release_update_changelog:
                echo: << parameters.echo >>
                package: << parameters.package >>
                publish: << parameters.publish >>
                specific_version: << parameters.specific_version >>
                verbosity: << parameters.verbosity >>
                version: << parameters.version >>
      - when:
          condition:
            and:
              - << parameters.when_pcu_push >>
          steps:
            - make_cargo_release_update_changelog:
                echo: << parameters.echo >>
                package: << parameters.package >>
                publish: << parameters.publish >>
                specific_version: << parameters.specific_version >>
                verbosity: << parameters.verbosity >>
                version: << parameters.version >>
      - when:
          condition: << parameters.when_pcu_push >>
          steps:
            - toolkit/push_cmd:
                pcu_no_push: << parameters.pcu_no_push >>
                pcu_semver: << parameters.pcu_semver >>
                pcu_verbosity: << parameters.pcu_verbosity >>
      - when:
          condition: << parameters.when_bluesky >>
          steps:
            - toolkit/bsky:
                blog_directory: << parameters.blog_directory >>
                command: << parameters.bluesky_command >>
                pcu_verbosity: << parameters.pcu_verbosity >>

workflows:
  check_last_commit:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.release-flag >>
        - not: << pipeline.parameters.validation-flag >>

    jobs:
      - toolkit/choose_pipeline:
          name: choose pipeline based on committer
          context: bot-check

  validation:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - << pipeline.parameters.validation-flag >>
        - not: << pipeline.parameters.release-flag >>
    jobs:
      - toolkit/label:
          min_rust_version: << pipeline.parameters.min-rust-version >>
          context: pcu-app
          filters:
            branches:
              only:
                - main
      - toolkit/required_builds:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/optional_builds:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/test_doc_build:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/idiomatic_rust:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/security:
          context: SonarCloud
      - toolkit/update_changelog:
          filters:
            branches:
              ignore:
                - main
          requires:
            - toolkit/required_builds
            - toolkit/test_doc_build
            - toolkit/idiomatic_rust
            - toolkit/security
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          min_rust_version: << pipeline.parameters.min-rust-version >>
          update_pcu: true

  on_success:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
        - not: << pipeline.parameters.release-flag >>

    jobs:
      - toolkit/end_success

  release:
    when:
      and:
        - or:
            - and:
                - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
                - equal: ["release check", << pipeline.schedule.name >>]
            - << pipeline.parameters.release-flag >>
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
    jobs:
      - make_release_and_update_changelog:
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          min_rust_version: << pipeline.parameters.min-rust-version >>
